#
# Web settings
#

# Override application base URI (default: none / use request URI and application context path)
#dbgrazer.web.baseURI = 

# Enable login (default: false)
dbgrazer.web.enableLogin = true

# Require login (default: false)
dbgrazer.web.requireLogin = true

# Enable query history (default: false)
#dbgrazer.web.enableHistory = true

# Max. history entries (default: 20)
#dbgrazer.web.historyLimit = 20

# Max. editable query parameters (default: 10)
#dbgrazer.web.paramsLimit = 10

# Max. editable query links (default: 10)
#dbgrazer.web.linksLimit = 10

# Max. editable query views (default: 10)
#dbgrazer.web.viewsLimit = 10

# Session timeout when logged in (default: none / use server default)
#dbgrazer.web.sessionTimeout = 1800


#
# Feature settings
#

# Enable query editing when logged in as admin (default: false)
dbgrazer.web.security.enableEditor = true

# Enable submitting custom queries (default: false)
dbgrazer.web.security.enableSubmit = true

# Enable data modification (default: false)
dbgrazer.web.security.enableDML = true

# Enable schema browser when logged in as admin (default: false)
dbgrazer.web.security.enableBrowser = true

# Enable schema designer when logged in as admin, requires enableBrowser (default: false)
dbgrazer.web.security.enableDesigner = true

# Enable connection editing when logged in as admin (default: false)
dbgrazer.web.security.enableLinkEditor = true

# Enable user editing when logged in as admin (default: false)
#dbgrazer.web.security.enableUserEditor = true

# Enable config editing when logged in as admin (default: false)
dbgrazer.web.security.enableConfigEditor = true

# Enable web service API (default: false)
#dbgrazer.web.security.enableWS = true

# Show SQL statements when logged in (default: false)
#dbgrazer.web.security.showSQL = true

# Enable download of graph sources in DOT format when logged in (default: false)
#dbgrazer.web.security.showDOT = true


#
# Web appearance settings
#

# Base name for overriding built-in localized messages, relative to ~/.dbgrazer (default: none)
dbgrazer.web.ui.messagesFile = /var/opt/dbgrazer/messages

# Base path for themes, relative to ~/.dbgrazer (default: themes)
#dbgrazer.web.ui.themePath = themes

# Available themes, "theme" is the built-in theme (default: theme)
dbgrazer.web.ui.themeNames = theme, gray, green, red, solarized-light, dark, solarized-dark

# Path to custom static resources (e.g. images), relative to ~/.dbgrazer (default: static)
#dbgrazer.web.ui.staticResourcePath = static

# Expire time for custom static resources in seconds from now (default: 86400)
#dbgrazer.web.ui.staticResourceTTL = 86400

# Menu aspect ratio (default: 4/3)
#dbgrazer.web.ui.menuRatio = 4/3

# Selectable autorefresh intervalsin seconds (default: 5,10,15,30,60)
#dbgrazer.web.ui.autorefreshIntervals = 5,10,15,30,60

# Use HTML5 inline SVGs (default: false)
dbgrazer.web.ui.inlineSVG = true


#
# Result display settings
#

# Display size limit for column content (default: 4096)
#dbgrazer.web.result.columnSizeLimit = 4096

# Number of columns for hex display of binary data (default: 16)
#dbgrazer.web.result.hexColumnLimit = 16

# Max. rows per dashboard query (limited by dbgrazer.query.maxRows below, default: 10)
#dbgrazer.web.result.dashboardRows = 10

# Max. rows per panel query (limited by dbgrazer.query.maxRows below, default: 20)
#dbgrazer.web.result.panelRows = 20

# Max. rows for timechart queries (default: 100)
#dbgrazer.web.result.timechartRows = 100

# Max. levels for drilldown queries (default: 10)
#dbgrazer.web.result.drilldownLevels = 10

# Max. rows per browser query (limited by dbgrazer.query.maxRows below, default: 100)
#dbgrazer.web.result.browserRows = 100

# Numer of rows per COMMIT in bulk operations (default: 100)
#dbgrazer.web.result.commitRows = 100

# Whether to show tabs for empty query results (default: false)
#dbgrazer.web.result.showEmptySubqueries = true

# Whether to show tabs for query results used for graph drawing (default: false)
#dbgrazer.web.result.showGraphSubqueries = true

# Whether to show tabs for query results used for chart drawing (default: false)
#dbgrazer.web.result.showChartSubqueries = true

# Whether to show tabs for query results used for tree drawing (default: false)
#dbgrazer.web.result.showTreeSubqueries = true

# Max. bookmark entries (default: 20)
#dbgrazer.web.bookmark.bookmarkLimit = 20

# Max. rows per generated MERGE statement (default: 100)
#dbgrazer.web.dml.mergeRows = 100


#
# Diff settings
#

# Diff algorithm (simple or diffutils, default: simple)
#dbgrazer.text.diffAlgorithm = simple

# Diff format (simple or diffutils, default: simple)
#dbgrazer.text.diffFormat = simple


#
# Chart settings
#

# Chart height in pixels (default: 640)
#dbgrazer.chart.height = 640

# Chart width in pixels (default: 1280)
#dbgrazer.chart.width = 1280


#
# Graph settings
#

# DOT command name for generating graph images (default: dot)
#dbgrazer.graph.dot.command = dot

# DOT dpi value for generating graph images (default: none / use dot's default)
dbgrazer.graph.dot.dpi = 56


#
# Storage settings
#

# SVN client command name for the svn QueryLoader (default: svn)
#dbgrazer.storage.svn.command = svn

# SVNServe command line for running a standalone SVN server (default: none / don't run a command)
#dbgrazer.storage.svn.server.command = 

# Command name for the external QueryLoader, relative to ~/.dbgrazer (default: none)
#dbgrazer.storage.external.command = 


#
# Authentication settings
#

# Authentication mechanism (one or more of dummy, http, ldap, ldapbind, jdbc, file, svn or external; default: dummy)
#dbgrazer.auth.userAuthentication = dummy, file

# Authorization mechanism (one or more of dummy, file, svn or external; default: dummy)
#dbgrazer.auth.userAuthorization = dummy, file

# UserLoader implementation (dummy, file, svn or external; default: dummy)
#dbgrazer.auth.userLoader = file


#
# Dummy authentication settings
#

# Admin username for dummy authentication (default: admin)
#dbgrazer.auth.dummy.user = admin

# Admin password for dummy authentication (default: admin)
#dbgrazer.auth.dummy.password = admin


#
# File authentication settings
#

# Path to user definition files, relative to ~/.dbgrazer (default: users)
dbgrazer.auth.file.userPath = /var/opt/dbgrazer/users

# Path to user profile files, relative to ~/.dbgrazer (default: profiles)
dbgrazer.auth.file.profilePath = /var/opt/dbgrazer/profiles

# Create / lookup files with lowercased username (default: false)
#dbgrazer.auth.file.lowercase = true

# Create user files for previously unknown authenticated users (default: false)
#dbgrazer.auth.file.create = true

# Additional roles to grant to users created based on file.create (default: none)
#dbgrazer.auth.file.defaultRoles = 


#
# JDBC authentication settings
#

# Connection name to use for authentication (default: none / no JDBC authentication)
#dbgrazer.auth.jdbc.linkName = 

# JDBC query for authentication. The user name will be bound as single parameter. Expects two columns: Hash algorithm and password hash (default: empty)
#dbgrazer.auth.jdbc.query = 


#
# LDAP authentication settings
#

# Connection name to use for authentication (default: none / no LDAP authentication)
#dbgrazer.auth.ldap.linkName = 

# Pattern for converting a user name to an LDAP user DN (default: ?)
#dbgrazer.auth.ldap.userPattern = ?

# LDAP base DN for looking up user accounts, relative to the baseDN (default: empty)
#dbgrazer.auth.ldap.userBaseDN = 

# LDAP filter for looking up user accounts (default: (uid=?))
#dbgrazer.auth.ldap.userFilter = (uid=?)


#
# HTTP authentication settings
#

# Connection name to use for authentication (default: none / no HTTP authentication)
#dbgrazer.auth.http.linkName = 

# HTTP URL, %username% and %password% will be replaced (default: none)
#dbgrazer.auth.http.url = 

# Use POST rather than GET (default: false)
#dbgrazer.auth.http.usePost = true

# POST content type (default: application/x-www-form-urlencoded)
#dbgrazer.auth.http.requestContentType = application/x-www-form-urlencoded

# POST SOAP action (default: none)
#dbgrazer.auth.http.requestAction = 

# POST body template, the magic entities &username; and &password; will be replaced (default: none)
#dbgrazer.auth.http.requestTemplate = 

# Response pattern (default: none / accept any response that is not an error code)
#dbgrazer.auth.http.responsePattern = 


#
# Backend settings
#

# ConfigLoader implementation (dummy, file, svn or external; default: dummy)
#dbgrazer.backend.configLoader = file

# LinkLoader implementation (dummy, file, svn or external; default: file)
#dbgrazer.backend.linkLoader = file

# Replace environment variable references in link definitions (default: false)
#dbgrazer.backend.linkEnvSubst = false

# Path to link definition files for the file LinkLoader, relative to ~/.dbgrazer (default: links)
dbgrazer.backend.file.linkPath = /var/opt/dbgrazer/links

# QueryLoader implementation (dummy, file, svn or external; default: file)
#dbgrazer.backend.queryLoader = file

# Path to query definitions for the file or svn QueryLoader, relative to ~/.dbgrazer (default: schemas)
dbgrazer.backend.file.schemaPath = /var/opt/dbgrazer/schemas

# Path to query definitions for the file or svn QueryLoader, relative to ~/.dbgrazer (default: dialects)
dbgrazer.backend.file.dialectPath = /var/opt/dbgrazer/dialects

# Log all queries (default: false)
#dbgrazer.backend.logQueries = false


#
# File settings
#

# List hidden files (default: false)
#dbgrazer.backend.file.listHidden = false

# Max. file size for download (default: 65536)
#dbgrazer.backend.file.maxSize = 65536

# Text file character set (default: UTF-8)
#dbgrazer.backend.file.charset = UTF-8


#
# JDBC settings
#

# Fetch limit (default: 100 rows)
#dbgrazer.backend.jdbc.maxRows = 100

# Fetch size (default: 100 rows)
#dbgrazer.backend.jdbc.fetchSize = 100

# Query timeout (default: 60 sec)
#dbgrazer.backend.jdbc.timeout = 60

# Max. levels for ERM graphs (default: 4)
#dbgrazer.backend.jdbc.ermLevels = 4

# Max. rows per generated MERGE statement (default: 100)
#dbgrazer.backend.jdbc.mergeRows = 100

# DataSourceFactory implementation (simple, c3p0 or jndi; default: simple)
#dbgrazer.backend.jdbc.dataSourceFactory = simple

# MetadataLoader implementation (dummy or jdbc; default: dummy)
dbgrazer.backend.jdbc.metadataLoader = jdbc

# Cache results from the MetadataLoader (default: false)
dbgrazer.backend.jdbc.metadataCache = true


#
# HTTP settings
#

# HTTP client implementation (jdk or commons; default: jdk)
#dbgrazer.backend.http.httpClient = jdk

# Connect timeout in millis (default: 1000)
#dbgrazer.backend.http.connectTimeout = 1000

# Read timeout in millis (default: 1000)
#dbgrazer.backend.http.readTimeout = 1000

# Create HTTP multipart requests that are MIME compliant (true) or "browser compatible" (false) (default: true)
#dbgrazer.backend.http.strictMode = false

# Connection name to use for anonymous requests, e.g. loading XML schemas from public servers (default: none)
#dbgrazer.backend.http.anonymousLinkName = 

# Proxy host name (default: no proxy)
#dbgrazer.backend.http.proxyHost =

# Proxy port (default: 3128)
#dbgrazer.backend.http.proxyPort = 3128

# Proxy user name (default: none / no authentication)
#dbgrazer.backend.http.proxyUsername =

# Proxy password (default: none)
#dbgrazer.backend.http.proxyPassword =


#
# LDAP settings
#

# Fetch limit (default: 100 rows)
#dbgrazer.backend.ldap.maxRows = 100

# Query timeout (default: 60 sec)
#dbgrazer.backend.ldap.timeout = 60

# LDAP: Attribute names whose content should be treated as binary in addition to the built-in ones (default: none)
#dbgrazer.backend.ldap.binaryAttributes = auditingPolicy dSASignature enatelPersonalTechnicalReferenceData msRTCSIP-UserRoutingGroupId objectGUID objectSid replUpToDateVector repsFrom repsTo


#
# Kafka settings
#

# Timeout for fetching Kafka messages (default: 100 ms)
dbgrazer.backend.kafka.fetchTimeout = 1000

# Limit for fetching Kafka messages (default: 100)
dbgrazer.backend.kafka.fetchLimit = 100


#
# SSH settings; can be overridden in connection definitions
#

# SSH Connect timeout in millis (default: 5000)
#dbgrazer.backend.ssh.connectTimeout = 5000

# SSH Read timeout in millis (default: 5000)
#dbgrazer.backend.ssh.readTimeout = 5000

# SSH host name
#dbgrazer.backend.ssh.hostname =

# SSH port (default: 22)
#dbgrazer.backend.ssh.port = 22

# SSH username
#dbgrazer.backend.ssh.username =

# SSH password (not needed for private key auth)
#dbgrazer.backend.ssh.password =

# SSH private key file
#dbgrazer.backend.ssh.keyFile =

# SSH known_hosts file
#dbgrazer.backend.ssh.hostsFile =

# Local port for tunnelled connection
#dbgrazer.backend.ssh.localPort =

# Destination host for tunnelled connection
#dbgrazer.backend.ssh.remoteHostname =

# Destination port for tunnelled connection
#dbgrazer.backend.ssh.remotePort =


#
# Default settings for DataSources created by the c3p0 DataSourceFactory; can be overridden in connection definitions
#

# Initial connection pool size (default: 0)
#c3p0.initialPoolSize = 0

# Minimum connection pool size (default: 0)
#c3p0.minPoolSize = 0

# Maximum connection pool size (default: 10)
#c3p0.maxPoolSize = 10

# Pool size increment (default: 1)
#c3p0.acquireIncrement = 1

# Connection acquire attempts before failure (default: 5)
#c3p0.acquireRetryAttempts = 5

# Connection acquire delay after failed attempts (default: 1000 msec)
#c3p0.acquireRetryDelay = 1000

# Timeout for acquiring a connection (default: 5000 msec)
#c3p0.checkoutTimeout = 5000

# Maximum time ANY idle connections will be kept around (default: 0 sec / infinite)
#c3p0.maxIdleTime = 0

# Maximum time idle connections exceeding minPoolSize will be kept around (default: 0 sec / infinite)
#c3p0.maxIdleTimeExcessConnections = 0

# Maximum total lifetime for any connection in the pool (default: 3600 sec)
#c3p0.maxConnectionAge = 3600

# Maximum number of cached PreparedStatements for all connections in the pool (default: 0 / use maxStatementsPerConnection)
#c3p0.maxStatements = 0

# Size of the statement cache per physical connection (default: 0)
#c3p0.maxStatementsPerConnection = 0

# Interval to test the connection (default: 300 sec)
#c3p0.idleConnectionTestPeriod = 300

# Statement for connection testing (default: none / use getMetaData())
#c3p0.preferredTestQuery = 
