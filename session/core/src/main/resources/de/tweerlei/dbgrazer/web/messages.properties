# Appearance
appName = DB Grazer
localeJS = scripts/locale.js
motd = Please choose a database connection.
loginRequired = Please log in to use this connection.
supportMailTo =
supportMailSubject =
supportMailTitle = Report a problem

# Theme names
theme_theme = Standard

# Datatype formats
timestampDateFormat = MM/dd/yyyy HH:mm:ss.SSS
longDateFormat = MM/dd/yyyy HH:mm:ss
shortDateFormat = MM/dd/yyyy
integerFormat = 0
floatFormat = #,##0.00######

# Error messages
error_unknownLinkType = The type must not be empty.
error_unknownQueryType = The type must not be empty.
error_emptyStatement = The statement must not be empty.
error_writeFailed = Failed to save the query. Please check the error log.
error_exists = This name is already taken.
error_emptyName = The name must not be empty.
error_emptyPassword = The password must not be empty.
error_emptyDriver = The driver class name must not be empty.
error_emptyUrl = The JDBC URL must not be empty.
error_emptyUsername = The user name must not be empty.
error_emptySchema = The schema name must not be empty.
error_driverClassNotFound = The driver class does not exist.
error_viewWithStatement = When subqueries are specified, the statement must be empty.
error_viewWithoutSubqueries = At least one subquery is required.
error_viewWithWrongCount = For a graph, at least two subqueries are needed, one for nodes and one for edges.
error_passwordMismatch = Passwords don't match.
error_tooFewColumns = Query yields too few columns: {0}
error_unsupportedDataTypes = Unsupported chart data types: {0} ({1}/{2})
error_dataTypesMismatch = Not all subqueries yield the same column types: {0}
error_dataConversionError = Data conversion error: {0}:{1}, {2}:{3}
error_rangeConversionError = Data conversion error: {0}:{1}, {2}:{3}, {4}:{5}
error_tableNotFound = Table not found: {0}

# Validation errors
validation_viewWithoutSubqueries = View without subqueries
validation_emptyQueryString = Empty query string
validation_unknownParameterQuery = Unknown parameter query: {0}
validation_parameterQueryNeedsParameter = Parameter query needs a parameter itself: {0}
validation_parameterQueryUsedAsSubquery = Parameter query is already used as subquery: {0}
validation_viewUsedAsParameterQuery = View used as parameter query: {0}
validation_unknownSubquery = Unknown subquery: {0}
validation_subqueryUsedMoreThanOnce = Subquery used more than once: {0}
validation_subqueryAcceptsDifferentParameters = Subquery accepts a different set of parameters: {0}
validation_queryReferencesSelf = Query references itself as subquery
validation_viewUsedAsSubquery = View used as subquery: {0}
validation_targetParameterNotAccepted = Target parameter is not accepted by any query: {0}
validation_unknownTargetQuery = Unknown target query: {0}
validation_targetQueryAcceptsNoParameter = Target query does not accept a parameter: {0}
validation_targetQueryUsedAsSubquery = Target query is already used as subquery: {0}
validation_dialectQueryReferencesSchemaQuery = Query from query set references schema specific query: {0}
validation_schemaQueryReferencesDialectQuery = Schema specific query references query from query set: {0}
validation_dialectQueryReferencesOtherDialectQuery = Query from query set references query from another set: {0}
validation_subqueryWithTooManyParameters = Too many parameters for subquery: {0}
validation_subqueryInDifferentGroup = Subquery in different Group than referencing query: {0}

# Help texts for ConfigKeys
help_dbgrazer.auth.dummy.password = Admin password for dummy authentication
help_dbgrazer.auth.dummy.user = Admin username for dummy authentication
help_dbgrazer.auth.file.profilePath = Path to user profiles, relative to ~/.dbgrazer
help_dbgrazer.auth.file.create = Create user files for previously unknown authenticated users
help_dbgrazer.auth.file.defaultRoles = Additional roles to grant to users created based on file.create
help_dbgrazer.auth.file.lowercase = Create / lookup files with lowercased username
help_dbgrazer.auth.file.userPath = Path to user definition files, relative to ~/.dbgrazer
help_dbgrazer.auth.userAuthentication = Authentication mechanism (one or more of dummy, http, ldap, file, svn or external)
help_dbgrazer.auth.userAuthorization = Authorization mechanism (one or more of dummy, file, svn or external)
help_dbgrazer.auth.userLoader = UserLoader implementation (dummy, file, svn or external)
help_dbgrazer.backend.configLoader = ConfigLoader implementation (dummy, file, svn or external)
help_dbgrazer.backend.linkLoader = LinkLoader implementation (dummy, file, svn or external)
help_dbgrazer.backend.linkEnvSubst = Replace environment variable references in link definitions
help_dbgrazer.backend.file.linkPath = Path to connection definition files for the file LinkLoader, relative to ~/.dbgrazer
help_dbgrazer.backend.file.schemaPath = Path to query definitions per schema for the file or svn QueryLoader, relative to ~/.dbgrazer
help_dbgrazer.backend.file.dialectPath = Path to query definitions per DB dialect for the file or svn QueryLoader, relative to ~/.dbgrazer
help_dbgrazer.backend.logQueries = Log all performed queries
help_dbgrazer.backend.queryLoader = QueryLoader implementation (dummy, file, svn or external)
help_dbgrazer.configFile = Path to actual config file
help_dbgrazer.configPath = Path to the actual config base directory (~/.dbgrazer)
help_dbgrazer.storage.external.command = Command name for the external QueryLoader, relative to ~/.dbgrazer
help_dbgrazer.storage.svn.command = SVN client command name for the svn QueryLoader, relative to ~/.dbgrazer
help_dbgrazer.storage.svn.server.command = Command line to start a local SVN server
help_dbgrazer.text.diffAlgorithm = Algorithm used for text diffs (simple or diffutils)
help_dbgrazer.text.diffFormat = Format used for text diffs (simple or diffutils)
help_dbgrazer.web.enableHistory = Enable query history
help_dbgrazer.web.enableLogin = Enable login
help_dbgrazer.web.historyLimit = Max. history entries
help_dbgrazer.web.linksLimit = Max. editable query links
help_dbgrazer.web.paramsLimit = Max. editable query parameters
help_dbgrazer.web.requireLogin = Require login for all connections
help_dbgrazer.web.viewsLimit = Max. editable query views
help_dbgrazer.web.bookmark.bookmarkLimit = Max. bookmark entries
help_dbgrazer.web.dml.mergeRows = Max. rows per generated MERGE statement
help_dbgrazer.web.result.browserRows = Max. rows per browser query (limited by dbgrazer.query.maxRows)
help_dbgrazer.web.result.columnSizeLimit = Display size limit for column content
help_dbgrazer.web.result.commitRows = Number of rows per COMMITed in bulk operations
help_dbgrazer.web.result.dashboardRows = Max. rows per dashboard query (limited by dbgrazer.query.maxRows)
help_dbgrazer.web.result.hexColumnLimit = Number of columns for hex display of binary data
help_dbgrazer.web.result.panelRows = Max. rows per panel query (limited by dbgrazer.query.maxRows)
help_dbgrazer.web.result.showEmptySubqueries = Whether to show tabs for empty query results
help_dbgrazer.web.result.timechartRows = Max. rows for timechart queries
help_dbgrazer.web.result.drilldownLevels = Max. number of levels for drill down queries
help_dbgrazer.web.security.enableBrowser = Enable schema browser when logged in as admin
help_dbgrazer.web.security.enableDesigner = Enable schema designer when logged in as admin (requires dbgrazer.web.enableBrowser)
help_dbgrazer.web.security.enableDML = Enable data modification
help_dbgrazer.web.security.enableEditor = Enable query editing when logged in as admin
help_dbgrazer.web.security.enableLinkEditor = Enable connection editing when logged in as admin
help_dbgrazer.web.security.enableSubmit = Enable custom query submission
help_dbgrazer.web.security.enableUserEditor = Enable user editing when logged in as admin
help_dbgrazer.web.security.enableConfigEditor = Enable configuration editing when logged in as admin
help_dbgrazer.web.security.enableWS = Enable web service API
help_dbgrazer.web.security.showDOT = Enable download of graph sources in DOT format when logged in
help_dbgrazer.web.security.showSQL = Show SQL statements when logged in
help_dbgrazer.web.sessionTimeout = Session timeout when logged in, in seconds
help_dbgrazer.web.ui.autorefreshIntervals = Selectable autorefresh intervals
help_dbgrazer.web.ui.inlineSVG = Use inline SVGs (HTML 5)
help_dbgrazer.web.ui.menuRatio = Menu aspect ratio
help_dbgrazer.web.ui.messagesFile = Base name for custom localized texts, relative to ~/.dbgrazer
help_dbgrazer.web.ui.staticResourcePath = Path to custom static resources (e.g. images), relative to ~/.dbgrazer
help_dbgrazer.web.ui.staticResourceTTL = Expire time for custom static resources in seconds from now
help_dbgrazer.web.ui.themeNames = Available theme names, "theme" is the built-in default theme
help_dbgrazer.web.ui.themePath = Path to custom themes, relative to ~/.dbgrazer

# ResultType
VIEW = subqueries (tabbed)
GRAPH = graph from two subqueries
CHART = chart from subqueries
TREE = tree from subqueries
DASHBOARD = dashboard
EXPLORER = explorer
TIMECHART = timeline from subqueries
PANELS = subqueries (single page)
NAVIGATOR = navigator
MULTILEVEL = hierarchy of subqueries
SVG = graphic from subqueries

# OrderBy
order_NONE = full
order_PK = by PK
order_DATA = by Data (non PK)

# RunMode
run_PREVIEW = Skript-Vorschau
run_SINGLE = Single statements
run_BATCH = Statement batch

# Help texts for ResultType
help_VIEW = Results from the specified subqueries will be shown as tabs.
help_GRAPH = Two subqueries are required.\n\
	The first subquery specifies node ID and node name in columns 1 and 2 and optionally node attributes (DOT format) in column 3.\n\
	The second subquery specifies start node ID and end node ID for each edge in columns 1 and 2 and optionally edge attributes (DOT format) in column 3.\n\
	NULL as start or end will trigger the creation of an anonymous UML-style start node or end node.
help_CHART = Each subquery is interpreted as data row in a chart.\n\
	The chart type is derived from the data types of the first 2-3 columns. These data types must be the same for all subqueries.\n\
	String, Number: Category chart (pie or bars).\n\
	Number, Number: XY chart (lines, areas, bars or points).\n\
	Date, Number: XY chart with time axis (lines, areas, bars or points).\n\
	Date, Date, Number: XY chart with time axis, the dates as start and end date will determine the width of bars.\n\
	Date, Date: Gantt chart, the dates are interpreted as start and end date.
help_TREE = The first subquery will be run without a parameter to produce the root nodes for the tree in at least 2 columns: ID and label.\n\
	Additional columns will be shown as tool tip.\n\
	Further subqueries will be run with the ID from the previous subquery as parameter to produce the nodes for each level.\n\
	The columns are interpreted as above.
help_DASHBOARD = Results from subqueries will be shown as panels in two columns.\n\
	Result rows are more limited than for other types.
help_EXPLORER = Subquery results will be shown in the navigation pane of an explorer-style view.\n\
	Linked queries will be loaded into the detail pane.
help_TIMECHART = Each subquery is interpreted as data row in a chart and should return two columns.\n\
	Results for each execution will be appended to the already fetched results.\n\
	The contents of the first column will be replaced with the current time so the chart shows the second column's variation in time.
help_PANELS = Results from subqueries will be shown as panels in a single column.
help_NAVIGATOR = The first subquery will be loaded into the detail pane.\n\
	Additional subqueries will be displayed as navigation links.
help_MULTILEVEL = The first subquery will be run without a parameter to produce the root nodes for the tree in at least 2 columns: ID and label.\n\
	Additional columns will be shown as tool tip.\n\
	Further subqueries will be run with the ID from the previous subquery as parameter to produce the nodes for each level.\n\
	The columns are interpreted as above.
help_SVG = A single subquery is required.\n\
	The first column should contain the name of the shape (rect, circle, ellipse or line), the next four columns are interpreted as coordinates.\n\
	An optional sixth column may specify additional attributes for the shape, e.g. fill color.

# Query attributes
GraphType = Graph type
ChartType = Chart type
ChartScaling = Scaling
colorize = Row coloring
colorizeNo = none
colorizeYes = from 1st column
sumRow = Sum row
sumRowNo = hide
sumRowYes = show
hideId = ID column
hideIdNo = show
hideIdYes = hide
orientation = Panel layout
orientationYes = fill Columns first
orientationNo = fill Rows first
tables = Appearance
tablesNo = simple
tablesYes = tabular
formatter = Formatting
formatting = Reformat
formattingNo = never
formattingYes = always
syntaxColoring = Syntax coloring
syntaxColoringNo = never
syntaxColoringYes = always
lineNumbers = Show line numbers
lineNumbersNo = never
lineNumbersYes = always
structure = Show structure
structureNo = never
structureYes = always
tableCatalog = Catalog name
tableSchema = Schema name
tableName = Table name
tablePKSelect = Next PK value
dimensions = Dimensions
results = Results
dataExtractor = Content format
rowTransformer = Transform rows
rowTransformation = Transformation recipe
showSubqueries = Show data
showSubqueriesNo = never
showSubqueriesYes = separately
resultType = Result type

# Help texts for attributes
help_GraphType = Preferred graph type, overridden by user selection
help_ChartType = Preferred chart type, overridden by user selection
help_ChartScaling = Preferred axis scaling, overridden by user selection
help_colorize = If enabled, don't show first column but interpret its contents as row color
help_hideId = Whether to show the first result column containing the ID parameter
help_orientation = Placement of subqueries on the dashboard
help_tables = Whether to show tables with all columns or a simple tree with only the first two columns
help_formatter = Text formatting
help_formatting = Always format text
help_syntaxColoring = Always highlight text
help_lineNumbers = Always show line numbers
help_tableCatalog = Catalog name of the table containing the records
help_tableSchema = Schema name of the table containing the records
help_tableName = Name of the table containing the records
help_tablePKSelect = Sub-SELECT that generates the PK value for a new record.\n\
	If empty, the PK value has to be entered explicitly.
help_dimensions = Column names to use as dimensions, separated by spaces.
help_results = Additional aggregate columns, separated by spaces.
help_sqlStatement = Occurrences of "?n?" in the statement text will be replaced by the nth Parameter.\n\
	The remaining parameters will be bound to the statement and must each be referenced by a "?" in the statement text.\n\
	To link to a query that accepts more than one parameter, the linked column has to contain the parameter values separated by two spaces each.
help_sumRow = Add a sum row that displays the sum of all values for numerical columns and the count of values for non-numeric columns.
help_dataExtractor = Content format to parse
help_rowTransformer = Transformation type
help_rowTransformation = Transformation recipe
help_showSubqueries = Show data used to create a visualization in separate tabs
help_resultType = Type of data returned by the function call

# ColumnType
INTEGER = integer
FLOAT = floating point
STRING = text
TEXT = multi-line text
PASSWORD = password
PATTERN = LIKE pattern
DATE = date
BOOLEAN = boolean
BINARY = binary data
ROWID = row ID
ARRAY = array
STRUCT = struct
BLOB = large binary data
CLOB = large string
XML = XML
REF = type reference
UNKNOWN = unknown

# Help texts for ColumnType
help_INTEGER = numeric, no decimal digits
help_FLOAT = numeric, with decimal digits
help_STRING = 
help_TEXT = 
help_PASSWORD = 
help_PATTERN = pattern to match, use '%' and '_' as placeholders
help_DATE = MM/dd/yyyy HH:mm:ss
help_BOOLEAN = true/false
help_BINARY = binary data
help_ROWID = row ID
help_ARRAY = array
help_STRUCT = struct
help_BLOB = large binary data
help_CLOB = large string
help_XML = XML
help_REF = type reference
help_UNKNOWN = unknown
help_REGEXP = Regular expression

# AggregationMode
NONE = show
HIDDEN = ignore
MIN = minimum
MAX = maximum
COUNT = count
COUNT_DISTINCT = count distinct
SUM = sum
AVG = average

# TextFormat
PLAIN = text
Image = image
DOT = DOT source
Diff = diff
HTML = HTML (preformatted)
Hex = bytes (hex)

# Authorities
ROLE_LOGIN = log in
ROLE_RELOAD = reload configuration
ROLE_EDIT = edit queries
ROLE_SUBMIT = submit custom queries
ROLE_BROWSE = browse DB objects
ROLE_LINKS = edit connections
ROLE_USERS = edit users
ROLE_WS = call web services
ROLE_DML = edit DB records

# Tab titles
emptyTab = More{0,choice,-1#|-1< ({0,number,integer})}
bookmarkTab = Bookmarks
resultTab = Search results
chartTab = Chart
graphTab = Graph
treeTab = Tree
bodyTab = Response
headerTab = Header
detailTab = Details
ddlTab = DDL script
dmlTab = DML script
dataTab = Data
sumTab = Total
connectionTab = Connection
ancestorsTab = Ancestors
descendantsTab = Descendants
customTab = {0}{1,choice,-1#|-1< ({1,number,integer})}
columnsTab = Columns ({0,number,integer})
privilegesTab = Privileges ({0,number,integer})
indicesTab = Indices ({0,number,integer})
referencedObjectsTab = Referenced objects ({0,number,integer})
referencingObjectsTab = Referencing objects ({0,number,integer})
activeConnectionsTab = Active connections ({0,number,integer})
activeSchemasTab = Active schemas ({0,number,integer})
activeUsersTab = Active users ({0,number,integer})
modulesTab = Modules ({0,number,integer})
customLevel = {0}{1,choice,0#|0<: {2}}
welcomeQuery = show this query as welcome page

# Query types
type_explorer = Explorer
type_visualization = Visualization
type_view = Details
type_other = Listing

# Other UI texts
lists = Overviews
queries = Searches
views = Views
subqueries = Subqueries
history = History
bookmarks = Bookmarks
edit = Edit
admin = Admin
user = User
connection = Connection
currentUser = User: {0}
currentConnection = Connection: {0}
chooseConnection = Choose connection

theme = Theme
language = Language
timezone = Time zone
profile = Profile
login = Log in
loginFailed = Invalid username or password
loginShortcut = Alt-Shift-L
logout = Log out
logoutShortcut = Alt-Shift-L
stats = Statistics
debug = Debug
users = Users
connections = Connections
reloadConnections = Reload connections
config = Configuration
reloadConfig = Reload configuration
dbCache = Schema cache
sqlQuery = SQL query
queriesByType = Queries by type
queriesByParam = Queries by parameter
subschemaQueries = Queries for {0}
subschemaQuery = This is a specialized query version for {0} connections.
checkQueries = Check queries
reloadQueries = Reload queries
newQuery = Create query
previewMode = Edit mode
previewModeShortcut = Alt-Shift-E
searchQueries = Search queries
searchQueriesShortcut = Alt-Shift-F

restAPI = REST API

username = User name
password = Password
loggedInAs = Logged in as {0}
connectionGroup = Group
connectionGroups = Groups
connectionSet = Set
connectionSets = Sets
schemaName = Schema name
schemaVersion = Schema version
newUser = Create user
newConnection = Create connection
chooseValue = Choose value
editQuery = Edit query
editQueryIcon = &#x270e;
errorOccurred = Error occurred
rename = Rename
newName = New name
queryParams = Parameters
queryGroup = Group
queryGroups = Groups
usedQueries = In use
unusedQueries = Not in use
change = Change
reset = Reset
reload = Reload
refresh = Refresh
refreshIcon = &#x21ba;
addBookmark = Add to bookmarks
addBookmarkIcon = &#x2606;
removeBookmark = Remove from bookmarks
removeBookmarkIcon = &#x2605;
autorefresh = Auto refresh
autorefreshIcon = &#x231a;
newWindow = Show this view in a new window
newWindowIcon = &#x2750;
showQuery = Show only this view
showQueryIcon = &#x279a;
tooltipIcon = &#x24d8;
chooseObject = Please choose an object on the left.
noData = No data found.
moreData = There are more rows available than shown here.
duration = Elapsed: {0,number,integer} msec
refreshInterval = {0,number,integer} sec
more = more
less = less
searchTerm = Search for
imageLoading = Image loading...
relatedQueries = Users of "{0}" were also interested in
download = Download
downloadSubtree = Download subtree
downloadAs = Download as {0}
upload = Upload
uploadAs = Upload {0}
file = File
showSQL = Show SQL
expand = expand
name = Name
description = Description
value = Value
date = Date
action = Action
actions = Actions
newPassword = New password
writable = allow DML
confirmation = Confirmation
readOnlyUser = This user's profile cannot be changed.
customAuth = No password, will be authenticated by other means
userRoles = Roles
loginGroup = Visible to all users after login
driverClassName = Driver class
jdbcUrl = JDBC URL
sqlDialect = SQL dialect
preDMLStatement = Execute before DML
postDMLStatement = Execute after DML
querySets = Query sets
newQuerySet = New query set
driverProperties = Driver properties
contents = Contents
privileges = Privileges
to = to
reverse = reverse
appliesTo = Applies to
applyToDialect = all {0} connections
applyToSchema = {0}
applyToVersion = {0} only
referencedBy = Referenced by
connectionType = Type
queryType = Type
columnType = Type
position = Pos.
valueQuery = Value query
column = Column
columns = Columns
query = Query
view = View
links = Links
addMatchingQueries = Add matching queries
sqlStatement = Statement
copy = Copy
copyToSchema = Copy to another schema
move = Move
createView = Create view
chartTitle = File name / title
defaultChartTitle = Values
defaultTableName = SCHEMA.TABLE
dmlAllowed = (DML allowed)
downloadAllRows = Download all rows
execute = Execute
executeScript = Execute as script
executeAs = Execute as script...
showPlan = Execution plan
showChart = Show chart
showGraph = Show graph
showCount = Show row count
showStats = Tabelle stats
showColumnTypes = Show column types
showHeaders = Show response headers
columnTypes = Column types
rowCount = {0,choice,0#no rows|1#one row|1<{0,number,integer} rows}
downloadText = Download as Text
dbObject = Object
dbObjectType = Type
comment = Comment
primaryKey = Primary key
primaryKeyIndex = Keys
nullable = Null
length = Length
decimals = Decimals
defaultValue = Default
grantee = Grantee
grantor = Grantor
grantable = Grantable
unique = Unique
viaFK = via FK
sourceColumns = from
destinationColumns = to
activeSessions = DB sessions
loadedQueries = Queries
creationTime = Session opened
loginTime = Logged in
lastRequestTime = Last request
currentSession = Current session
currentRequest = Current request
module = Module
moduleVersion = Version
tryAgain = try again
errorQuery = Executed query
errorDetails = Error details
confError = The query could not be found. This might be a misconfiguration or you have chosen a connection where the query does not apply.
techError = The query could not be executed. This might be a misconfiguration or the database is currently not available.
runtimeError = An unexpected error occurred.
dataOnDownload = This query will return a large number of rows or take a long time to execute.\n\
	Only an estimated row count is shown here; please download the actual data as file.\n\
	\n\
	Rows: {0}
catalog = Catalog
schema = Schema
object = Object
noSelection = Please choose
result = Result
noProblems = No problems found.
ddlHeader = Generated on {0}
dmlHeader = Generated on {0} from:
resultCompareHeader = Compare: {0}
designs = Designs
customQueries = Saved queries
delete = Delete
load = Load
save = Save
addObject = Add object
allObjects = Add objects
overwrite = overwrite existing queries
navigation = Navigation
format = Format {0}
trim = Hide empty columns
permalink = Permalink
maximize = maximize
maximizeIcon = &#x25f1;
clear = clear
clearIcon = &#x232b;
preview = Preview script
runMode = Mode
useInsert = Generate INSERTs
useUpdate = Generate UPDATEs
useDelete = Generate DELETEs
useMerge = Use MERGE instead of INSERT/UPDATE
compareMode = Match rows
outline = Outline
noOutline = (not available)
changeLog = Change log
tnsNamesUpload = Upload TNSNAMES.ORA
tnsNamesDownload = Download TNSNAMES.ORA
tnsNameEdit = Edit TNSName
key = Key
body = Value
send = send
reloadQueriesText = Reload queries?
deleteQueryText = Are you sure you want to delete this query?
reloadConnectionsText = Reload connections?
deleteLinkText = Are you sure you want to delete this connection?
deleteUserText = Are you sure you want to delete this user?
reloadConfigText = Reload configuration?
deleteConfigText = Are you sure you want to delete this value?
resetText = Are you sure you want to remove all objects?
id = ID
size = Size
compact = compacted

add = Add
addIcon = &#x271a;
remove = Remove
removeIcon = &#x2716;
up = Move up
upIcon = &#x21d1;
down = Move down
downIcon = &#x21d3;
editIcon = &#x270d;
copyIcon = &#x271a;
back = back
filter = Filter
empty = (empty)
noQuery = (no query)
noEntry = (no entry)
default = (default)
timestamp = timestamp
null = &#x2205;
true = &#x2612;
false = &#x2610;
trueText = Yes
falseText = No
cancel = Cancel
apply = Apply
compare = Compare
previous = Previous
next = Next
seek = Go to
resultMessage = Result: {0}
applyToAll = apply to all links using the same value
created = {0} created
updated = {0} updated

traversalMode = References
STARTING_ONLY = Selected table only
PARENTS = Parent tables
CHILDREN = Parent and child tables
SIBLINGS = Child tables of parent tables
STEPCHILDREN = All tables

alreadyRunning = You may run only one long running operation per session.
cancelledByUser = Operation cancelled by user.
progressAbsolute = {0,number,integer}
progressRelative = {0,number,integer} / {1,number,integer} ({2,number,percent})
cancelled = cancel requested
dataError = The query could not be executed. Maybe the table structures differ or at least one database is currently not available.
dataLimit = Not all rows were compared because the fetch limit was reached.

# Progress counters, ordered by name
001_sourceRows = {0} rows read from source
001_sourceRows_progress = {0} / {1} rows read from source
002_destinationRows = {0} rows read from destination
002_destinationRows_progress = {0} / {1} rows read from destination
003_matched = {0} matched
003_matched_progress = {0} / {1} matched
004_inserted = {0} inserted
004_inserted_progress = {0} / {1} inserted
005_updated = {0} updated
005_updated_progress = {0} / {1} updated
006_deleted = {0} deleted
006_deleted_progress = {0} / {1} deleted
007_totalStatements = {0} DML statements
007_totalStatements_progress = {0} / {1} DML statements
008_failedStatements = {0} statements failed
008_failedStatements_progress = {0} / {1} statements failed
009_totalRows = {0} rows affected
009_totalRows_progress = {0} / {1} rows affected
010_committedRows = {0} rows committed
010_committedRows_progress = {0} / {1} rows committed
